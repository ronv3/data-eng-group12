services:
  db:
    container_name: db-tourism
    image: postgres:16.4
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGUSER: ${POSTGRES_USER}
      PGPASSWORD: ${POSTGRES_PASSWORD}
      PGDATABASE: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - ./pg_init:/docker-entrypoint-initdb.d
    env_file:
      - ../.env

  pgadmin:
    container_name: pgadmin-tourism
    image: elestio/pgadmin:REL-8_10
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"    # open http://localhost:5050
    env_file:
      - ../.env

  python-app:
    build:
      context: .
      dockerfile: Dockerfile.ingestion
    volumes:
      - .:/app
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - db
    env_file:
      - ../.env

  airflow-db:
    container_name: airflow-db
    image: postgres:16.4
    environment:
      POSTGRES_USER: ${AIRFLOW_USER}
      POSTGRES_PASSWORD: ${AIRFLOW_PASSWORD}
      POSTGRES_DB: ${AIRFLOW_DB}
      PGUSER: ${AIRFLOW_USER}
      PGPASSWORD: ${AIRFLOW_PASSWORD}
      PGDATABASE: ${AIRFLOW_DB}
    ports:
      - "5442:5442"
    volumes:
      - ./pgdata_airflow:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${AIRFLOW_USER}" ]
      interval: 10s
      retries: 5
    restart: always
    env_file:
      - ../.env

  airflow-webserver:
    image: apache/airflow:2.8.1
    container_name: airflow-webserver
    command: webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_USER}:${AIRFLOW_PASSWORD}@airflow-db:5442/${AIRFLOW_DB}
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__API__AUTH_BACKENDS: "airflow.api.auth.backend.basic_auth"
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./data:/opt/airflow/data
    depends_on:
      - airflow-init
      - airflow-db
    restart: always
    env_file:
      - ../.env

  airflow-scheduler:
    image: apache/airflow:2.8.1
    container_name: airflow-scheduler
    command: scheduler
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_USER}:${AIRFLOW_PASSWORD}@airflow-db:5442/${AIRFLOW_DB}
      AIRFLOW_CONN_DB: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
    depends_on:
      - airflow-init
      - airflow-db
    restart: always
    env_file:
      - ../.env

  airflow-init:
    image: apache/airflow:2.8.1
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        airflow db init
        airflow users create \
          --username ${AIRFLOW_USER} \
          --password ${AIRFLOW_PASSWORD} \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email admin@example.com
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_USER}:${AIRFLOW_PASSWORD}@airflow-db:5442/${AIRFLOW_DB}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
    depends_on:
      - airflow-db
    restart: "no"
